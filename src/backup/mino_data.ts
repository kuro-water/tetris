const I_MINO = 0;
const T_MINO = 1;
const O_MINO = 2;
const L_MINO = 3;
const J_MINO = 4;
const S_MINO = 5;
const Z_MINO = 6;

const INIT_FIELD = [
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
];

// // x = -y, y = x とすることで90℃回転させることもできるが、
// // SRSの導入のためには回転データをベタ打ちするのがよさそう？あんま調べてない
// // mino_sort.pyにて基本形を回転させた相対座標を出力できる
// というのはSRSが上手くいかなかったので、wikiの画像を見て座標をベタ打ちした。
// 参考：https://tetris.wiki/Super_Rotation_System
// How Guideline move Really Works
// prettier-ignore
const MINO_POS = [
    [ // I
        [[-1, 0], [0, 0], [1, 0], [2, 0]],
        [[1, -1], [1, 0], [1, 1], [1, 2]],
        [[-1, 1], [0, 1], [1, 1], [2, 1]],
        [[0, -1], [0, 0], [0, 1], [0, 2]],
    ],
    [ // T
        [[0, -1], [-1, 0], [0, 0], [1, 0]],
        [[0, -1], [0, 0], [1, 0], [0, 1]],
        [[-1, 0], [0, 0], [1, 0], [0, 1]],
        [[0, -1], [-1, 0], [0, 0], [0, 1]],
    ],
    [ // O
        [[0, -1], [1, -1], [0, 0], [1, 0]],
        [[1, -1], [0, 0], [1, 0], [0, -1]],
        [[0, 0], [1, 0], [0, -1], [1, -1]],
        [[1, 0], [0, -1], [1, -1], [0, 0]],
    ],
    [ // L
        [[1, -1], [-1, 0], [0, 0], [1, 0]],
        [[0, -1], [0, 0], [0, 1], [1, 1]],
        [[-1, 0], [0, 0], [1, 0], [-1, 1]],
        [[-1, -1], [0, -1], [0, 0], [0, 1]],
    ],
    [ // J
        [[-1, -1], [-1, 0], [0, 0], [1, 0]],
        [[0, -1], [1, -1], [0, 0], [0, 1]],
        [[-1, 0], [0, 0], [1, 0], [1, 1]],
        [[0, -1], [0, 0], [-1, 1], [0, 1]],
    ],
    [ // S
        [[0, -1], [1, -1], [-1, 0], [0, 0]],
        [[0, -1], [0, 0], [1, 0], [1, 1]],
        [[0, 0], [1, 0], [-1, 1], [0, 1]],
        [[-1, -1], [-1, 0], [0, 0], [0, 1]],
    ],
    [ // Z
        [[-1, -1], [0, -1], [0, 0], [1, 0]],
        [[1, -1], [0, 0], [1, 0], [0, 1]],
        [[-1, 0], [0, 0], [0, 1], [1, 1]],
        [[0, -1], [-1, 0], [0, 0], [-1, 1]],
    ],
];

// ITOLJSZ
const MINO_COLORS = ["#0F9BD7", "#AF298A", "#E39F02", "#E35B02", "#2141C6", "#59B101", "#D70F37"];
const GHOST_COLORS = ["#074D6B", "#571445", "#714F01", "#712D01", "#102063", "#2C5800", "#6B071B"];

// 参考：https://tetris.fandom.com/wiki/move
// Wall Kicks のデータ表
// T,L,J,S,Z表の 0>>1 が move[0][1]に、 0>>3 がSRS[0][3]に格納されている
// !!! wikiとはyの絶対値が逆なことに注意 !!!

// prettier-ignore
// const SRS_TLJSZ = [
//     [
//         [],
//         [[-1, 0], [-1, -1], [0, 2], [-1, 2]],
//         [],
//         [[1, 0], [1, -1], [0, 2], [1, 2]],
//     ],
//     [
//         [[1, 0], [1, 1], [0, -2], [1, -2]],
//         [],
//         [[1, 0], [1, 1], [0, -2], [1, -2]],
//         [],
//     ],
//     [
//         [],
//         [[-1, 0], [-1, -1], [0, 2], [-1, 2]],
//         [],
//         [[1, 0], [1, -1], [0, 2], [1, 2]],
//     ],
//     [
//         [[-1, 0], [-1, 1], [0, 2], [1, 2]],
//         [],
//         [[-1, 0], [-1, 1], [0, -2], [-1, -2]],
//         [],
//     ],
// ];

const SRS_TLJSZ = [
    [
        [],
        [
            [
                -1,
                0
            ],
            [
                -1,
                -1
            ],
            [
                0,
                2
            ],
            [
                -1,
                2
            ]
        ],
        [],
        [
            [
                1,
                0
            ],
            [
                1,
                -1
            ],
            [
                0,
                2
            ],
            [
                1,
                2
            ]
        ]
    ],
    [
        [
            [
                1,
                0
            ],
            [
                1,
                1
            ],
            [
                0,
                -2
            ],
            [
                1,
                -2
            ]
        ],
        [],
        [
            [
                1,
                0
            ],
            [
                1,
                1
            ],
            [
                0,
                -2
            ],
            [
                1,
                -2
            ]
        ],
        []
    ],
    [
        [],
        [
            [
                -1,
                0
            ],
            [
                -1,
                -1
            ],
            [
                0,
                2
            ],
            [
                -1,
                2
            ]
        ],
        [],
        [
            [
                1,
                0
            ],
            [
                1,
                -1
            ],
            [
                0,
                2
            ],
            [
                1,
                2
            ]
        ]
    ],
    [
        [
            [
                -1,
                0
            ],
            [
                -1,
                1
            ],
            [
                0,
                -2
            ],
            [
                -1,
                -2
            ]
        ],
        [],
        [
            [
                -1,
                0
            ],
            [
                -1,
                1
            ],
            [
                0,
                -2
            ],
            [
                -1,
                -2
            ]
        ],
        []
    ]
]

// prettier-ignore
// const SRS_I = [
//     [
//         [],
//         [[-2, 0], [1, 0], [-2, 1], [1, -2]],
//         [],
//         [[-1, 0], [2, 0], [-1, -2], [2, 1]],
//     ],
//     [
//         [[2, 0], [-1, 0], [2, -1], [-1, 2]],
//         [],
//         [[-1, 0], [2, 0], [-1, -2], [2, 1]],
//         [],
//     ],
//     [
//         [],
//         [[1, 0], [-2, 0], [1, 2], [-2, -1]],
//         [],
//         [[2, 0], [-1, 0], [2, -1], [-1, 2]],
//     ],
//     [
//         [[1, 0], [-2, 0], [1, 2], [-2, -1]],
//         [],
//         [[-2, 0], [1, 0], [-2, 1], [1, -2]],
//         [],
//     ],
// ];

const SRS_I = [
    [
        [],
        [
            [
                -2,
                0
            ],
            [
                1,
                0
            ],
            [
                -2,
                1
            ],
            [
                1,
                -2
            ]
        ],
        [],
        [
            [
                -1,
                0
            ],
            [
                2,
                0
            ],
            [
                -1,
                -2
            ],
            [
                2,
                1
            ]
        ]
    ],
    [
        [
            [
                2,
                0
            ],
            [
                -1,
                0
            ],
            [
                2,
                -1
            ],
            [
                -1,
                2
            ]
        ],
        [],
        [
            [
                -1,
                0
            ],
            [
                2,
                0
            ],
            [
                -1,
                -2
            ],
            [
                2,
                1
            ]
        ],
        []
    ],
    [
        [],
        [
            [
                1,
                0
            ],
            [
                -2,
                0
            ],
            [
                1,
                2
            ],
            [
                -2,
                -1
            ]
        ],
        [],
        [
            [
                2,
                0
            ],
            [
                -1,
                0
            ],
            [
                2,
                -1
            ],
            [
                -1,
                2
            ]
        ]
    ],
    [
        [
            [
                1,
                0
            ],
            [
                -2,
                0
            ],
            [
                1,
                2
            ],
            [
                -2,
                -1
            ]
        ],
        [],
        [
            [
                -2,
                0
            ],
            [
                1,
                0
            ],
            [
                -2,
                1
            ],
            [
                1,
                -2
            ]
        ],
        []
    ]
]

const _f = 1000 / 60; // 60fpsにおける1フレーム 16.6666...ミリ秒
const DAS = Math.floor(10 * _f); // 166ms
const ARR = Math.floor(2 * _f); // 33ms
const LOCK_DOWN_DELAY = 500; // 接地猶予時間
const SET_DELAY = 20; // 接地硬直
const DEL_DELAY = 100; // ライン消去時の硬直
// 単位はms

const BLOCK_SIZE = 20;

// as constがないとspread演算子(...)が使えない
// 参考：https://qiita.com/sho-19202325/items/d74f9ed527840488d149
const HOLD_CANVAS_SIZE = [0, 0, 80, 80] as const;
const FIELD_CANVAS_SIZE = [0, 0, 240, 420] as const;
const NEXT_CANVAS_SIZE = [0, 0, 80, 420] as const;

const FRAME_COLOR = "black";
const PLACED_MINO_COLOR = "gray";
const BACKGROUND_COLOR = "whitesmoke";
console.log("import");

export = {
    T_MINO,
    I_MINO,
    O_MINO,
    S_MINO,
    Z_MINO,
    L_MINO,
    J_MINO,
    INIT_FIELD,
    MINO_POS,
    MINO_COLORS,
    GHOST_COLORS,
    SRS_I,
    SRS_TLJSZ,
    _f,
    DAS,
    ARR,
    LOCK_DOWN_DELAY,
    SET_DELAY,
    DEL_DELAY,
    BLOCK_SIZE,
    HOLD_CANVAS_SIZE,
    FIELD_CANVAS_SIZE,
    NEXT_CANVAS_SIZE,
    FRAME_COLOR,
    PLACED_MINO_COLOR,
    BACKGROUND_COLOR,
};
